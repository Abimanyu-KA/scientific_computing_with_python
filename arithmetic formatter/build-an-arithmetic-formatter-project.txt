def arithmetic_arranger(problems, show_answers=False):
    output_list = []          #final list containing the output
    first_numbers = []        #contains the first numbers of each problem
    second_numbers = []       #contains second
    operators = []            #operators in the problem
    max_num = []              #stores which number is highest,1st or 2nd
    max_lens = []             #maximum lengths in each problem
    if len(problems) > 5:
        return 'Error: Too many problems.'
    for i in problems:
        op = i.split(' ')

        if op[1]!='+' and op[1]!='-':
            return "Error: Operator must be '+' or '-'."

        if not(op[0].isdigit() and op[2].isdigit()):
            return 'Error: Numbers must only contain digits.'

        max_len = 0
        if len(op[0]) >= len(op[2]):
            max_len = len(op[0])
            max_num.append(1)
        else:
            max_len = len(op[2])
            max_num.append(2)
        
        if max_len > 4:
            return 'Error: Numbers cannot be more than four digits.'
        else:
            max_lens.append(max_len)

        # appending first numbers to the list
        first_numbers.append(op[0])

        #appending operators to the list
        operators.append(op[1])

        #appending second numbers to the list
        second_numbers.append(op[2])

    # Going through first_numbers and appending first row to the output list

    for j in range(0,len(problems)):
        if j != 0:
            output_list.append("    ")

        if max_num[j] == 1:
            output_list.append("  ")
        else:
            temp = (max_lens[j] - len(first_numbers[j])) + 2
            output_list.append(" "*temp)
        
        output_list.append(first_numbers[j])
    
    output_list.append('\n')

    #appending second row to output list
    for k in range(0,len(problems)):
        if k!=0:
            output_list.append("    ")
        output_list.append(operators[k])
        temp = (max_lens[k] - len(second_numbers[k])) + 1
        output_list.append(" "*temp)
        output_list.append(second_numbers[k])
    
    output_list.append('\n')
    
    #appending third row, dashes, to the output list
    for l in range(0,len(problems)):
        if l != 0:
            output_list.append("    ")

        temp = max_lens[l] + 2
        output_list.append("-"*temp)
    
    #on show_answers being true, adding the answers to the output
    if show_answers:
        output_list.append("\n")

        for m in range(0,len(problems)):
            if operators[m] == '+':
                ans = str(int(first_numbers[m]) + int(second_numbers[m]))
            else:
                ans = str(int(first_numbers[m]) - int(second_numbers[m]))
            temp = (max_lens[m] + 2) - len(ans)
            if m != 0:
                output_list.append("    ")
            output_list.append(" "*temp)
            output_list.append(ans)
      
    #creating string of all the rows
    arranged_output = ''.join(output_list)

    #returning the output
    return arranged_output